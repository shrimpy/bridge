{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["clientSiteUrl","shareStyling","width","height","marginBottom","border","display","App","useEffect","iframeElement","document","createElement","src","onload","event","a","setupHost","contentWindow","getElementById","appendChild","setupIframeDemo","setupDivDemo","className","window","location","origin","id","style","fetch","response","text","content","pageFragment","createRange","createContextualFragment","scriptElementList","querySelectorAll","scriptPromises","idx","length","scriptElement","push","addScriptToDOM","replace","parentNode","removeChild","Promise","all","divWindow","postMessage","apply","arguments","scriptSrc","resolve","body","script","async","HostSampleResolver","name","inputs","from","resolver","setTimeout","data","message","client","clientOrigin","host","Host","registerResolver","setup","console","log","invokeResolver","JSON","stringify","subscribe","broadcastEvent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4db81f80.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { Environment, Host, IResolver } from \"fesoa-bridge\";\nimport './App.css';\n\nconst clientSiteUrl = \"http://localhost:3001\";\nconst shareStyling = {\n  width: \"800px\",\n  height: \"300px\",\n  marginBottom: \"10px\",\n  border: \"1px solid lightgrey\",\n  display: \"inline-block\",\n};\n\n\nfunction App() {\n  useEffect(() => {\n    setupIframeDemo();\n    setupDivDemo();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">Welcome to Bridge demo</h1>\n        <p>Host Origin: {window.location.origin}</p>\n      </header>\n      <br />\n      <div id=\"place-holder-for-iframe\" style={shareStyling} />\n      <br />\n      <div id=\"place-holder-for-div\" style={shareStyling} />\n    </div>\n  );\n}\n\nexport default App;\n\nfunction setupIframeDemo(): void {\n  const iframeElement: HTMLIFrameElement = document.createElement(\"iframe\");\n  iframeElement.src = clientSiteUrl;\n  iframeElement.width = \"100%\";\n  iframeElement.height = \"100%\";\n\n  iframeElement.onload = async (event: Event) => {\n    await setupHost(\"IFRAME\", iframeElement.contentWindow as Environment, clientSiteUrl);\n  };\n\n  const containerElement = document.getElementById(\"place-holder-for-iframe\") as HTMLDivElement;\n  containerElement.appendChild(iframeElement);\n}\n\nasync function setupDivDemo(): Promise<void> {\n  const response = await fetch(clientSiteUrl);\n  const content = await response.text();\n  const pageFragment = document.createRange().createContextualFragment(content);\n  const scriptElementList = pageFragment.querySelectorAll(\"script\");\n\n  const scriptPromises: Promise<void>[] = [];\n  for (let idx = 0; idx < scriptElementList.length; idx++) {\n    const scriptElement = scriptElementList[idx];\n    scriptPromises.push(addScriptToDOM(scriptElement.src.replace(\"http://localhost:3000\", clientSiteUrl)));\n    (scriptElement.parentNode as Node).removeChild(scriptElement);\n  }\n\n  const containerElement = document.getElementById(\"place-holder-for-div\") as HTMLElement;\n  containerElement.appendChild(pageFragment);\n  await Promise.all(scriptPromises);\n\n  const divWindow: any = {\n    postMessage: function () {\n      window.postMessage.apply(window, arguments as any);\n    },\n  };\n\n  await setupHost(\"DIV\", divWindow, window.location.origin);\n}\n\nfunction addScriptToDOM(scriptSrc: string): Promise<void> {\n  return new Promise(resolve => {\n    if (document.body.querySelectorAll(`script[src=\"${scriptSrc}\"]`).length > 0) {\n      resolve();\n    }\n    const script = document.createElement(\"script\") as HTMLScriptElement;\n    script.src = scriptSrc;\n    script.async = false;\n    script.onload = (event: Event) => {\n      resolve();\n    };\n    document.body.appendChild(script);\n  });\n}\n\nclass HostSampleResolver implements IResolver {\n  public name: string = \"HostSampleResolver\";\n\n  public echo(inputs: { message: string }, from: string): Promise<any> {\n    return new Promise((resolver) => {\n      setTimeout(() => {\n        resolver({ data: `echo from host: ${inputs.message}` });\n      }, 500);\n    });\n  }\n}\n\nasync function setupHost(name: string, client: Environment, clientOrigin: string) {\n  const host = new Host(window, client, clientOrigin);\n  host.registerResolver(new HostSampleResolver());\n\n  await host.setup()\n\n  console.log(`Host ===> ${name}: channel opened.`);\n\n  const response = await host.invokeResolver<string>(\"ClientSampleResolver\", \"echo\", { message: \"message from host\" });\n  console.log(`Host ===> RESPONSE from client > ${JSON.stringify(response)}`);\n\n  host.subscribe(\"client-event\", (inputs: any) => {\n    console.log(\"Host - sub ===>\", inputs);\n  });\n\n  setTimeout(() => {\n    host.broadcastEvent(\"host-event\", \"YOLO\");\n  }, 1000);\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}